1. What is the version of Docker Server Engine running on the Host?

$ docker version
Client: Docker Engine - Community
 Version:           20.10.24
 API version:       1.41
 Go version:        go1.19.7
 Git commit:        297e128
 Built:             Tue Apr  4 18:21:05 2023
 OS/Arch:           linux/amd64
 Context:           default
 Experimental:      true

Server: Docker Engine - Community
 Engine:
  Version:          20.10.24
  API version:      1.41 (minimum version 1.12)
  Go version:       go1.19.7
  Git commit:       5d6db84
  Built:            Tue Apr  4 18:18:48 2023
  OS/Arch:          linux/amd64
  Experimental:     false
 containerd:
  Version:          1.6.20
  GitCommit:        2806fc1057397dbaeefbea0e4e17bddfbd388f38
 runc:
  Version:          1.1.5
  GitCommit:        v1.1.5-0-gf19387a
 docker-init:
  Version:          0.19.0
  GitCommit:        de40ad0

=> 20.10.24

===========================================================

2. How many containers are running on this host?

$ docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES

=> 0

===========================================================

3. How many images are available on this host?
$ docker images
REPOSITORY                      TAG       IMAGE ID       CREATED         SIZE
redis                           latest    eca1379fe8b5   12 months ago   117MB
mysql                           latest    8189e588b0e8   12 months ago   564MB
nginx                           latest    6efc10a0510f   13 months ago   142MB
postgres                        latest    ceccf204404e   13 months ago   379MB
nginx                           alpine    8e75cbc5b25c   13 months ago   41MB
alpine                          latest    9ed4aefc74f6   13 months ago   7.04MB
ubuntu                          latest    08d22c0ceb15   14 months ago   77.8MB
kodekloud/simple-webapp-mysql   latest    129dd9f67367   5 years ago     96.6MB
kodekloud/simple-webapp         latest    c6e3cd9aae36   5 years ago     84.8MB

=> 9

===========================================================

4. Run a container using the redis image

$ docker run redis

===========================================================

5. Stop the container you just created

$ docker ps
CONTAINER ID   IMAGE     COMMAND                  CREATED         STATUS              PORTS      NAMES
5fae55d7347d   redis     "docker-entrypoint.s…"   2 minutes ago   Up About a minute   6379/tcp   trusting_allen
$ docker stop trusting_allen
trusting_allen

===========================================================

6. How many containers are RUNNING on this host now?

$ docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES

===========================================================

7. How many containers are RUNNING on this host now? We just created a few.

$ docker ps
CONTAINER ID   IMAGE          COMMAND                  CREATED          STATUS          PORTS     NAMES
e86ae655b338   alpine         "sleep 1000"             35 seconds ago   Up 32 seconds             inspiring_wilbur
6bae132858ec   nginx:alpine   "/docker-entrypoint.…"   37 seconds ago   Up 35 seconds   80/tcp    nginx-2
20cea313a9f3   nginx:alpine   "/docker-entrypoint.…"   39 seconds ago   Up 37 seconds   80/tcp    nginx-1
70e327c70089   ubuntu         "sleep 1000"             41 seconds ago   Up 39 seconds             awesome_northcut

=> 4

===========================================================

8. How many containers are PRESENT on the host now? Including both Running and Not Running ones

$ docker ps -a
CONTAINER ID   IMAGE          COMMAND                  CREATED              STATUS                          PORTS     NAMES
b2659e11af9f   alpine         "/bin/sh"                About a minute ago   Exited (0) About a minute ago             tender_clarke
e86ae655b338   alpine         "sleep 1000"             About a minute ago   Up About a minute                         inspiring_wilbur
6bae132858ec   nginx:alpine   "/docker-entrypoint.…"   About a minute ago   Up About a minute               80/tcp    nginx-2
20cea313a9f3   nginx:alpine   "/docker-entrypoint.…"   About a minute ago   Up About a minute               80/tcp    nginx-1
70e327c70089   ubuntu         "sleep 1000"             About a minute ago   Up About a minute                         awesome_northcut
5fae55d7347d   redis          "docker-entrypoint.s…"   6 minutes ago        Exited (0) 3 minutes ago                  trusting_allen

=> 6

===========================================================

9. What is the image used to run the nginx-1 container?

=> nginx:alpine

===========================================================

10. What is the name of the container created using the ubuntu image?

=> awesome_northcut

===========================================================

11. What is the ID of the container that uses the alpine image and is not running?

=> b2659e11af9f

===========================================================

12. What is the state of the stopped alpine container?

=> Exited

===========================================================

13. Delete all containers from the Docker Host. Both Running and Not Running ones. Remember you may have to stop containers before deleting them.

$ docker stop ^C
$ docker stop e86a 6bae 20ce 70e3
e86a
6bae
20ce
70e3

$ docker rm b265 e86a 6bae 20ce 70e3 5fae
b265
e86a
6bae
20ce
70e3
5fae

===========================================================

14. Delete the ubuntu Image.

$ docker rmi ubuntu
Untagged: ubuntu:latest
Untagged: ubuntu@sha256:67211c14fa74f070d27cc59d69a7fa9aeff8e28ea118ef3babc295a0428a6d21
Deleted: sha256:08d22c0ceb150ddeb2237c5fa3129c0183f3cc6f5eeb2e7aa4016da3ad02140a
Deleted: sha256:b9

===========================================================

15. You are required to pull a docker image which will be used to run a container later. Pull the image nginx:1.14-alpine Only pull the image, do not create a container.

$ docker pull nginx:1.14-alpine
1.14-alpine: Pulling from library/nginx
bdf0201b3a05: Pull complete 
3d0a573c81ed: Pull complete 
8129faeb2eb6: Pull complete 
3dc99f571daf: Pull complete 
Digest: sha256:485b610fefec7ff6c463ced9623314a04ed67e3945b9c08d7e53a47f6d108dc7
Status: Downloaded newer image for nginx:1.14-alpine
docker.io/library/nginx:1.14-alpine

===========================================================

16. Run a container with the nginx:1.14-alpine image and name it webapp

=> $ docker run -d --name webapp nginx:1.14-alpine
9e85315757e417a43d876a877c7453f9017c9506c8b12e754be8c760bdca42fa
$ docker ps
CONTAINER ID   IMAGE               COMMAND                  CREATED          STATUS          PORTS     NAMES
9e85315757e4   nginx:1.14-alpine   "nginx -g 'daemon of…"   26 seconds ago   Up 22 seconds   80/tcp    webapp

===========================================================

17. Cleanup: Delete all images on the host. Remove containers as necessary

$ docker ps -a
CONTAINER ID   IMAGE               COMMAND                  CREATED              STATUS              PORTS     NAMES
9e85315757e4   nginx:1.14-alpine   "nginx -g 'daemon of…"   About a minute ago   Up About a minute   80/tcp    webapp

$ docker stop 9e85
9e85

$ docker rm webapp
webapp

$ docker images   
REPOSITORY                      TAG           IMAGE ID       CREATED         SIZE
redis                           latest        eca1379fe8b5   12 months ago   117MB
mysql                           latest        8189e588b0e8   12 months ago   564MB
nginx                           latest        6efc10a0510f   13 months ago   142MB
postgres                        latest        ceccf204404e   13 months ago   379MB
nginx                           alpine        8e75cbc5b25c   13 months ago   41MB
alpine                          latest        9ed4aefc74f6   13 months ago   7.04MB
nginx                           1.14-alpine   8a2fb25a19f5   5 years ago     16MB
kodekloud/simple-webapp-mysql   latest        129dd9f67367   5 years ago     96.6MB
kodekloud/simple-webapp         latest        c6e3cd9aae36   5 years ago     84.8MB

$ docker rmi image redis mysql nginx  postgres nginx alpine nginx kodekloud/simple-webapp-mysql kodekloud/simple-webapp
Untagged: redis:latest
Untagged: redis@sha256:f50031a49f41e493087fb95f96fdb3523bb25dcf6a3f0b07c588ad3cdbe1d0aa
Deleted: sha256:eca1379fe8b541831fd5ce4a252c263db0cef4efbfd428a94225dc020aaeb1af
Deleted: sha256:21acda8c08f1a6109e2fb61ed010d368ee6581cf30128cdaab0e6b91dabffc22
Deleted: sha256:aafc83c9f9299ba7a3af08ab0b1f822340278803714695fd2a96351fe89b37ea
.
.
.






























